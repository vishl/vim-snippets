
snippet track "Track"
QTAnalytics.sharedInstance().globalTrack("$1", properties:${2:nil})

endsnippet

snippet collectionView "All Collection View Methods"
// MARK: UICollectionViewDataSource

func numberOfSectionsInCollectionView(collectionView: UICollectionView) -> Int {
	return 0
}


func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
	return 0
}

func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
	let cell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifier, forIndexPath: indexPath) as! UICollectionViewCell

	// Configure the cell

	return cell
}
endsnippet

snippet collectionView "Item Size"
func collectionView(collectionView: UICollectionView,
					  layout collectionViewLayout: UICollectionViewLayout,
	  sizeForItemAtIndexPath indexPath: NSIndexPath) -> CGSize{
	return CGSizeMake($1, $2);
}
endsnippet


snippet	clear
UIColor.clearColor()
endsnippet

snippet	white
UIColor.whiteColor()
endsnippet

snippet nib
NSBundle.mainBundle().loadNibNamed("$1", owner: self, options: nil)[0] as! ${2:$1}
endsnippet

snippet bg "Background thread"
dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), {
    $1
})
endsnippet

snippet mark 
// Mark: - $1
endsnippet

snippet ani "Animate with duration"
UIView.animateWithDuration(${1:0.25}) {
	$2
}
endsnippet

snippet compc "Completion unowned"
{ [unowned self] (error:NSError!, operation:AFHTTPRequestOperation!, rawData:AnyObject!) -> Void in
	if(error == nil){
		$1
	}else{
		HEUtils.handleError(error, operation:operation, allowDisplay:true)
	}
}
endsnippet

snippet compc "Completion weak"
{ [weak self] (error:NSError!, operation:AFHTTPRequestOperation!, rawData:AnyObject!) -> Void in
	if let wself = self {
		if(error == nil){
			$1
		}else{
			HEUtils.handleError(error, operation:operation, allowDisplay:true)
		}
	}
}
endsnippet

# snippet compd "Define Completion"
# (error:NSError!, operation:AFHTTPRequestOperation!, rawData:AnyObject!) -> Void
# endsnippet
